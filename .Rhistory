#'
#' @param palette Character name of palette in conesa_palettes: c("main", "nature", "sunshine", "hot", "warm", "cold", "complete") are avairable.
#' @param continuous Boolean indicating whether color aesthetic is continuous or not
#' @param reverse Boolean indicating whether the palette should be reversed
#' @param ... Additional arguments passed to discrete_scale() or
#'            scale_color_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))
#' g <- g + geom_point(size = 4)
#' g <- g + scale_color_conesa(palette = "main")
#'
#' @export
scale_color_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if (!continuous) {
ggplot2::discrete_scale("colour", paste0("conesa_", palette), palette = pal, breaks = NULL, labels = NULL, expand = NULL, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
#' Fill scale constructor for conesa colors
#'
#' @param palette Character name of palette in conesa_palettes c("main", "nature", "sunshine", "hot", "warm", "cold", "complete") are avairable.
#' @param continuous Boolean indicating whether color aesthetic is continuous or not
#' @param reverse Boolean indicating whether the palette should be reversed
#' @param ... Additional arguments passed to discrete_scale() or
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
# Fill by discrete variable with different palette + remove legend (guide)
mpg <- mpg[mpg$manufacturer %in% c("audi", "dodge", "jeep"),]
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#' @param ... Additional arguments passed to discrete_scale() or
#'            scale_color_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))
#' g <- g + geom_point(size = 4)
#' g <- g + scale_color_conesa(palette = "main")
#'
#' @export
scale_color_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = "main", reverse = reverse)
if (!continuous) {
ggplot2::discrete_scale("colour", paste0("conesa_", "main"), palette = pal, breaks = NULL, labels = NULL, expand = NULL, ...)
} else {
ggplot2::scale_color_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = "main", reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, expand = F, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, expand = NA, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NA, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, ...)
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, ...)
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, limits = NULL, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, labels = NULL, limits = NULL, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, limits = NULL, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, breaks = NULL, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, drop=F, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
ggplot(mpg, aes(manufacturer, fill = manufacturer)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
scale_fill_conesa(palette = "complete")
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
#'            scale_fill_gradientn(), used respectively when continuous is TRUE or FALSE
#'
#' @examples
#' library(ggplot2)
#' g <- ggplot(mpg, aes(manufacturer, fill = manufacturer))
#' g <- g + geom_bar()
#' g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1))
#' g <- g + scale_fill_conesa(palette = "complete")
#'
#' @export
scale_fill_conesa <- function(palette = "main", continuous = FALSE, reverse = FALSE, values = NULL, ...) {
if(!palette %in% names(conesa_palettes)){
message("Palette must be some of the following palettes: ", paste(names(conesa_palettes),sep=" ", collapse=", "))
stop()
}
pal <- conesa_pal(palette = palette, reverse = reverse)
if(!continuous){
ggplot2::discrete_scale("fill", paste0("conesa_", palette), palette = pal, ...)
}else{
ggplot2::scale_fill_gradientn(colours = pal(256), ...)
}
}
library(devtools)
load_all
load_all()
check()
load_all()
check()
check()
library(devtools)
devtools::load_all(".")
check()
build()
check()
build()
install()
check()
build()
library(devtools)
build()
library(devtools)
chech()
check()
build()
library(devtools)
devtools::load_all(".")
data("iris")
?data("iris")
?data("iris", package = "utils")
data("iris", package = "utils")
data("iris")
data("iris)
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))
g <- g + geom_point(size = 4)
g <- g + scale_fill_conesa(palette = "main")
data("iris);
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species));
g <- g + geom_point(size = 4);
g <- g + scale_fill_conesa(palette = "main")
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))
g
g <- g + geom_point(size = 4)
g
g <- g + scale_fill_conesa(palette = "main")
g
g <- g + scale_color_conesa(palette = "main")
g
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, fill = Species))
g <- g + geom_point(size = 4)
g <- g + scale_fill_conesa(palette = "main")
g
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, fill = Species))
g <- g + geom_bar(size = 4, stat = "identity")
g <- g + geom_bar(size = 4)
g
g <- ggplot(iris, aes(x = Sepal.Width)) +
geom_histogram(binwidth = 0.2, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histogram of Sepal Width",
x = "Sepal Width",
y = "Frequency")
g
g <- ggplot(iris, aes(x = Sepal.Width, fill = Species))
g
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.7)
g
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.7, position = "jitter")
g
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.3, position = "jitter")
g
g <- ggplot(iris, aes(x = Sepal.Width, fill = Species))
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.3, position = "jitter")
g
g <- ggplot(iris, aes(x = Sepal.Width, fill = Species))
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.5)
g <- g + labs(title = "Histogram of Sepal Width", x = "Sepal Width", y = "Frequency")
g <- g + scale_fill_conesa(palette = "main")
g
g <- g + geom_histogram(binwidth = 0.2, alpha = 0.8)
g
g <- ggplot(iris, aes(Sepal.Width, Sepal.Length, color = Species))
g <- g + geom_point(size = 4)
g <- g + scale_color_conesa(palette = "main")
g
colorSpecies <- colorConesa(3, palette = "main")
plot(x = iris$Sepal.Length, y = iris$Sepal.Width, col = colorSpecies[iris$Species], pch = 16)
?colorConesa
colorSpecies <- colorConesa(3, palette = "cold")
plot(x = iris$Sepal.Length, y = iris$Sepal.Width, col = colorSpecies[iris$Species], pch = 16)
getConesaColors()
getConesaPalettes()
check()
build()
check(remote = T, incoming = T, force_suggests = T)
install.packages("RColorConesa")
check()
devtools::check()
